name: E2E Integration Tests with RING S3

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'mkdocs.yml'
      - 'requirements.txt'  # MkDocs requirements
      - 'NOTICE'
      - '.lychee.toml'
      - '.markdownlint.yaml'
      - "CLAUDE.md"

env:
  KUBECONFIG: "/home/runner/.kube/config"

jobs:
  dev-image:
    name: Dev Image
    permissions:
      contents: read
      packages: write
    uses: scality/workflows/.github/workflows/docker-build.yaml@v2
    with:
      context: .
      name: mountpoint-s3-csi-driver
      namespace: ${{ github.repository_owner }}
      tag: ${{ github.sha }}

  e2e-tests:
    name: v${{ matrix.ring_version }}
    runs-on: ubuntu-22.04-8core
    needs: dev-image
    strategy:
      fail-fast: false
      matrix:
        include:
          - ring_version: "9.4"
            github_varirable_name: "CLOUDSERVER_RING_9_4"
          - ring_version: "9.5"
            github_varirable_name: "CLOUDSERVER_RING_9_5"
    env:
      CLOUDSERVER_TAG: ${{ vars[matrix.github_varirable_name] }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run Common Setup
        uses: ./.github/actions/e2e-setup-common
        with:
          ref: ${{ github.sha }}

      - name: Get Host IP Address
        id: get_ip
        run: echo "host_ip=$(hostname -I | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Configure hosts file for S3 FQDN
        run: |
          echo "${{ steps.get_ip.outputs.host_ip }} s3.scality.com" | sudo tee -a /etc/hosts
          # Verify the hosts entry
          cat /etc/hosts | grep s3.scality.com

      - name: Configure CoreDNS for S3 FQDN
        run: |
          set -e -o pipefail
          # Get the current CoreDNS ConfigMap
          kubectl get configmap coredns -n kube-system -o yaml > coredns-original.yaml

          # Add custom hosts entry to CoreDNS
          kubectl get configmap coredns -n kube-system -o json | \
          jq --arg ip "${{ steps.get_ip.outputs.host_ip }}" \
          '.data.Corefile |= sub("ready"; "ready\n        hosts {\n            " + $ip + " s3.scality.com\n            fallthrough\n        }")' | \
          kubectl apply -f -

          # Restart CoreDNS to pick up changes
          kubectl rollout restart deployment coredns -n kube-system

          # Wait for CoreDNS to be ready
          kubectl rollout status deployment coredns -n kube-system --timeout=60s

          # Verify DNS resolution works from within a pod
          kubectl run dns-test --image=busybox:1.28 --rm -it --restart=Never -- nslookup s3.scality.com

      - name: Start Kubernetes Event and Log Capture
        run: |
          mkdir -p artifacts/k8s-debug
          ./tests/e2e/scripts/capture-events-and-logs.sh artifacts/k8s-debug start &
          echo $! > capture.pid

      - name: Run CSI Compliance Tests
        run: |
          # Load credentials and run CSI compliance tests against the deployed S3 backend
          source tests/e2e/scripts/load-credentials.sh
          export AWS_ENDPOINT_URL=http://s3.scality.com:8000
          make csi-compliance-test

      - name: Run Scality Tests
        run: |
          mkdir -p test-results
          # Load credentials from the integration config
          source tests/e2e/scripts/load-credentials.sh
          make e2e-all \
            S3_ENDPOINT_URL=http://s3.scality.com:8000 \
            CSI_IMAGE_TAG=${{ github.sha }} \
            CSI_IMAGE_REPOSITORY=ghcr.io/${{ github.repository }} \
            ADDITIONAL_ARGS="--junit-report=./test-results/e2e-tests-results.xml"

      - name: Stop K8s Event Capture and Generate Debug Report
        if: always()
        run: |
          # Stop the capture process
          if [ -f capture.pid ]; then
            ./tests/e2e/scripts/capture-events-and-logs.sh artifacts/k8s-debug stop || true
            rm -f capture.pid
          fi

          # Compress K8s debug data
          tar -czf artifacts/k8s-debug-capture.tar.gz -C artifacts k8s-debug/ || true

      - name: Copy S3 logs to artifacts directory
        if: always()
        run: |
          mkdir -p artifacts/logs/s3
          cp -r .github/scality-storage-deployment/logs/s3/* artifacts/logs/s3/ 2>/dev/null || true

      - name: Upload Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-artifacts-${{ matrix.ring_version }}
          path: artifacts

      - name: Upload test results to Codecov
        if: ${{ always() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./tests/e2e/test-results/e2e-tests-results.xml
          flags: e2e_tests,cloudserver_${{ matrix.ring_version }}
          slug: scality/mountpoint-s3-csi-driver
