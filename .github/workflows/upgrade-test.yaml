name: Upgrade Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'mkdocs.yml'
      - 'requirements.txt'
      - 'NOTICE'
      - '.lychee.toml'
      - '.markdownlint.yaml'
      - "CLAUDE.md"

jobs:
  upgrade-test:
    name: Test v1.2.0 â†’ local upgrade
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/scality
          username: "${{ github.repository_owner }}"
          password: "${{ github.token }}"

      - name: Setup Helm
        uses: azure/setup-helm@v4.3.1

      - name: Install Mage
        run: |
          go install github.com/magefile/mage@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Set Environment Variables
        run: |
          HOST_IP=$(hostname -I | awk '{print $1}')
          echo "HOST_IP=$HOST_IP" >> $GITHUB_ENV
          echo "S3_ENDPOINT_URL=http://$HOST_IP:8000" >> $GITHUB_ENV
          echo "KIND_CLUSTER_NAME=upgrade-test-cluster" >> $GITHUB_ENV
          echo "Host IP: $HOST_IP"
          echo "S3 Endpoint: http://$HOST_IP:8000"
          echo "Kind Cluster: upgrade-test-cluster"

      - name: Create Kind Cluster
        uses: helm/kind-action@v1.12.0
        with:
          wait: 90s
          cluster_name: upgrade-test-cluster

      - name: Deploy CloudServer (S3 Backend)
        run: |
          set -e -o pipefail
          mkdir -p logs/s3
          chown -R runner:docker logs
          docker compose --profile s3 up -d --quiet-pull
          bash ../scripts/wait_for_local_port.bash 8000 30
        working-directory: .github/scality-storage-deployment

      - name: Start Kubernetes Event and Log Capture
        run: |
          mkdir -p artifacts/k8s-debug
          ./tests/e2e/scripts/capture-events-and-logs.sh artifacts/k8s-debug start &
          echo $! > capture.pid

      - name: Configure Host DNS for S3 Endpoint
        run: |
          echo "Adding s3.example.com -> $HOST_IP mapping to /etc/hosts for CSI driver compatibility"
          echo "$HOST_IP s3.example.com" | sudo tee -a /etc/hosts
          cat /etc/hosts | grep s3.example.com

      - name: Install CSI Driver v1.2.0 from OCI Registry
        run: SCALITY_CSI_VERSION=1.2.0 mage install

      - name: Show Status of CSI Driver
        run: mage status && mage showS3DNSStatus

      - name: Setup Upgrade Tests (Static + Dynamic Provisioning)
        run: mage setupUpgradeTests

      - name: Apply CRDs Before Upgrade
        run: |
          # Apply CRDs first (Helm 3 doesn't update CRDs on upgrade)
          echo "Applying CRDs..."
          kubectl apply -f ./charts/scality-mountpoint-s3-csi-driver/crds/

      - name: Upgrade to Local Development Version
        run: VERBOSE=1 mage up

      - name: Show Status of CSI Driver After Upgrade
        run: mage status && mage showS3DNSStatus

      - name: Verify Systemd Mounter Tests (Static + Dynamic Provisioning)
        run: mage verifySystemdMounterTests

      - name: Test Pod Mounter Transition After Pod Restart
        run: |
          echo "=== Testing automatic transition from systemd to pod mounter ==="
          echo "This test verifies that when pods are deleted and recreated after upgrade,"
          echo "they automatically transition from systemd mounter to pod mounter while"
          echo "preserving all existing data."
          mage testPodMounterTransition

      - name: Stop K8s Event Capture and Generate Debug Report
        if: always()
        run: |
          # Stop the capture process
          if [ -f capture.pid ]; then
            ./tests/e2e/scripts/capture-events-and-logs.sh artifacts/k8s-debug stop || true
            rm -f capture.pid
          fi

          # Compress K8s debug data
          tar -czf artifacts/k8s-debug-capture.tar.gz -C artifacts k8s-debug/ || true

      - name: Copy S3 logs to artifacts directory
        if: always()
        run: |
          mkdir -p artifacts/logs/s3
          cp -r .github/scality-storage-deployment/logs/s3/* artifacts/logs/s3/ 2>/dev/null || true

      - name: Upload Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: v1-to-latest-upgrade-test-artifacts
          path: artifacts

      - name: Cleanup Test Resources
        if: always()
        run: mage cleanupUpgradeTests || true

      - name: Cleanup
        if: always()
        run: mage down
