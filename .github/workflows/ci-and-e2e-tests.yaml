name: CI & E2E Tests

on:
  push:
    branches:
      - '**'

env:
  CLOUDSERVER_IMAGE: ${{ vars.CLOUDSERVER_IMAGE }}
  AWS_ACCESS_KEY_ID: "accessKey1"
  AWS_SECRET_ACCESS_KEY: "verySecretKey1"
  KUBECONFIG: "/home/runner/.kube/config"

jobs:
  dev-image:
    name: Dev Image
    permissions:
      contents: read
      packages: write
    uses: scality/workflows/.github/workflows/docker-build.yaml@v2
    with:
      context: .
      name: mountpoint-s3-csi-driver
      namespace: ${{ github.repository_owner }}
      tag: ${{ github.sha }}

  controller-e2e-tests:
    name: E2E Controller Tests
    runs-on: ubuntu-24.04
    needs: dev-image
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Run Common Setup
        uses: ./.github/actions/e2e-setup-common
        with:
          ref: ${{ github.sha }}
          deploy_csi_driver: "false"

      - name: Run Controller Tests
        run: make e2e-controller

  # systemd mounter is used when the mounter is launched within the CSI driver pod.
  systemd-mounter-e2e-tests:
    name: E2E Systemd Mounter Tests
    runs-on: ubuntu-24.04
    needs: dev-image
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Run Common Setup
        uses: ./.github/actions/e2e-setup-common
        with:
          ref: ${{ github.sha }}

      - name: Run E2E Tests (SystemdMounter)
        env:
          S3_ENDPOINT_URL: ${{ env.S3_ENDPOINT_URL }}
        run: |
          set +e
          pushd tests/e2e-kubernetes
          KUBECONFIG=/home/runner/.kube/config ginkgo -p -vv -timeout 60m -- \
            --bucket-region=us-east-1 \
            --commit-id=${{ github.sha }} \
            --bucket-prefix=helm-test-cluster
          EXIT_CODE=$?
          kubectl logs -l app=s3-csi-node -n kube-system --kubeconfig ${KUBECONFIG}
          kubectl version --kubeconfig ${KUBECONFIG}
          kubectl get nodes -o wide --kubeconfig ${KUBECONFIG}
          popd
          cat tests/e2e-kubernetes/csi-test-artifacts/output.json
          exit $EXIT_CODE
